---
name: Load Parameters
description: Load parameters for the build job

outputs:
  build_matrix:
    description: Build matrix
    value: ${{ steps.set-matrix.outputs.build_matrix }}

  docker_image:
    description: Docker image
    value: ${{ steps.get-docker-image.outputs.image_name }}

  flat_build:
    description: Command to run for the flat build
    value: ${{ steps.set-build-command.outputs.flat_build }}

  sdk_build_command:
    description: Command to run for the SDK build
    value: ${{ steps.set-build-command.outputs.sdk_build_command }}

runs:
  using: "composite"
  steps:
    - name: Set Build Matrix
      id: set-matrix
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          const filePath = path.join(process.env.GITHUB_WORKSPACE, 'ci', 'MACHINES.json');
          let file;
          try {
            if (!fs.existsSync(filePath)) {
              core.setFailed(`MACHINES.json not found at ${filePath}`);
              return;
            }
            file = JSON.parse(fs.readFileSync(filePath, 'utf-8'));
          } catch (err) {
            core.setFailed(`Failed to load or parse MACHINES.json: ${err.message}`);
            return;
          }
          const matrix = Object.entries(file).map(([machine, kas_file]) => ({ machine, kas_file }));
          core.setOutput('build_matrix', JSON.stringify(matrix));
          console.log(matrix);

    - name: Set the build commands
      id: set-build-command
      uses: actions/github-script@v7
      with:
        script: |
          const flat_build = 'bitbake core-image-base'
          core.setOutput('flat_build', flat_build)
          console.log("FLAT BUILD COMMAND:", flat_build)

          const sdk = 'bitbake core-image-base -c populate_sdk'
          core.setOutput('sdk_build_command', sdk)
          console.log("SDK BUILD COMMAND:", sdk)

    - name: Update Summary
      shell: bash
      run: |
        echo "## Build Matrix" >> $GITHUB_STEP_SUMMARY
        echo "| Machine | Config File |" >> $GITHUB_STEP_SUMMARY
        echo "| ------- | -------- |" >> $GITHUB_STEP_SUMMARY
        build_matrix=$(echo '${{ steps.set-matrix.outputs.build_matrix }}' | jq -c '.') # Ensure valid JSON format
        echo "$build_matrix" | jq -c '.[]' | while read -r entry; do
          machine=$(echo "$entry" | jq -r '.machine')
          kas_file=$(echo "$entry" | jq -r '.kas_file')
          echo "| $machine | $kas_file |" >> $GITHUB_STEP_SUMMARY
        done
